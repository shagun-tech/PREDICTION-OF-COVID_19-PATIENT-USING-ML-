# -*- coding: utf-8 -*-
"""
Created on Wed Jul 22 10:08:48 2020

@author: Abhinash
"""

@ML-CLASS
@class start in 2 min

DATA ANALYTICS:
    1)DESCRIPTIVE ANALYSIS(EXCEL/BI-TOOLS/SAS)
    2)PREDICTIVE ANALYSIS(ML)
    3)PRECRIPTIVE ANALYSIS()

#Data case: CAR-SALES/ONLINE PURCHASE/TITANIC-DATASETS/IRIS-DATASETS

#PORJECT NAME: COVD_19 PREDICTION MODELLING
#CORONA VIRUS:

IMPORT LIBRARY

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_excel(r"C:\Users\Abhinash\Desktop\corona virus dataset.xlsx")
data

data.info()

#MAIN FEATURE[body_temp,Age,Difficulties in breathing,
#   Running nose,Body_pain,Corona result,Gender ]

covd=data.loc[0:,["Body_temp","Age","Difficulties in breathing",   
                  "Running nose","Body_pain","Corona result","Gender"]]
covd

covd.info()
#--------missing value
covd.isnull().sum()

covd["Body_temp"].plot.hist()
covd["Age"].plot.hist()

covd["Body_temp"].fillna(covd["Body_temp"].median(),inplace=True)
covd["Age"].fillna(covd["Age"].median(),inplace=True)

#-------------LABEL FOR OBJECT TYPE VALUE
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
covd["Gender"]=le.fit_transform(covd["Gender"])
covd["Corona result"]=le.fit_transform(covd["Corona result"])

#------------------------------------------------------------
#Sepearte Dep/Indp varaible
Y=covd["Corona result"]
X=covd.drop(["Corona result"],axis=1)

#-----------------DATA FULL TRAIN-------------------
modlling: classification:KNN

from sklearn.neighbors import KNeighborsClassifier
model=KNeighborsClassifier()

#train model
model.fit(X,Y)

print(model.score(X,Y))

#model testing
while(True):
    print("---------CORONA VIRUS PRE_MEDICAL TEST---------------")
    print(" ")
    print("1: test 2:exit")
    print(" ")
    ch=int(input("Enteryour choice :"))
    if(ch==1):
        print("---Welcome To Covd_19 Digital testing Mode---")
        bt=float(input("Enter Body Temperature in Fer :"))
        age=float(input("Enter Age :"))
        print("Difficulties in breathing--1:PROBLEM YES 0:NO PROBLEM:")
        dbr=float(input("Enter Coice :"))
        print("Running Nose(cold/cough)--1:PROBLEM YES 0:NO PROBLEM:")
        rn=float(input("Enter Coice :"))
        print("Body Pain--1:PROBLEM YES 0:NO PROBLEM:")
        bp=float(input("Enter Coice :"))
        print("Gender--1:MAlE 0:FEMALE")
        gen=float(input("Enter Coice :"))
        X_test=[bt,age,dbr,rn,bp,gen]
        Y_pred=model.predict([X_test,])
        ref={0:"RESULT IS NEGATIVE",1:"RESULT IS POSITIVE GO FOR MEDICAL TEST"}
        print(ref[Y_pred[0]])
    elif(ch==2):
        print("program end")
        break
    else:
        print("Invalid choice")

#---------------------------------------------------
MODEL: KNN(n_neighbors=5,metrics="minkoski")
KNeighborsClassifier()

Hyperparameter tunning:
    

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_excel(r"C:\Users\Abhinash\Desktop\corona virus dataset.xlsx")
data

data.info()

#MAIN FEATURE[body_temp,Age,Difficulties in breathing,
#   Running nose,Body_pain,Corona result,Gender ]

covd=data.loc[0:,["Body_temp","Age","Difficulties in breathing",   
                  "Running nose","Body_pain","Corona result","Gender"]]
covd

covd.info()
#--------missing value
covd.isnull().sum()

covd["Body_temp"].plot.hist()
covd["Age"].plot.hist()

covd["Body_temp"].fillna(covd["Body_temp"].median(),inplace=True)
covd["Age"].fillna(covd["Age"].median(),inplace=True)

#-------------LABEL FOR OBJECT TYPE VALUE
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
covd["Gender"]=le.fit_transform(covd["Gender"])
covd["Corona result"]=le.fit_transform(covd["Corona result"])

#------------------------------------------------------------

#Sepearte Dep/Indp varaible
Y=covd["Corona result"]
X=covd.drop(["Corona result"],axis=1)

from sklearn.neighbors import KNeighborsClassifier
KNN=KNeighborsClassifier()
    
from sklearn.model_selection import GridSearchCV
parameter=[{'n_neighbors':[1,3,5,7,9,11],'metric':['euclidean']},
            {'n_neighbors':[1,3,5,7,9,11],'metric':['minkowski']}]

gs=GridSearchCV(estimator=KNN,param_grid=parameter,
                scoring='accuracy',cv=10,n_jobs=-1)

model1=gs.fit(X,Y)
best_Acc=model1.best_score_
best_para=model1.best_params_

print(best_Acc)
print(best_para)

#----------------------------------------------------------------

Final modelling: 
KNN({'metric': 'euclidean', 'n_neighbors': 1})

#-------------------------------------------------------
#-------------------------------------------------------
GUI APPLICATION DEVELOP: COVD_19

MODULE: TKINTER

from tkinter import*#start line
root=Tk()# GUI WINDOW develop
root.geometry("400x600")#geometry window/GUI

#root window title
root.title("COVD-19 DIGITAL APPLICATION")

Label(root,text="CORONA VIRUS PRE_MEDICAL TEST",
      font=('Hel)).place(x=30,y=40)


root.resizable(0,0)
root.mainloop()#end line











































